# This pipeline automates the following processes:
#  1) Build a docker image using the latest commit of the main branch
#  2) Push the newly created image to Azure Container Registry
#  3) Deploy the new image to a Azure Web App

# changes to the main branch will trigger this pipeline
trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '048ad0a8-b126-4c21-84a3-f8d522794d55'
  azureSubscription: 'EsoServerSubscriptionConnection'
  containerRegistry: 'acreso.azurecr.io'
  imageName: 'eso-server'
  tag: '$(Build.BuildId)'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  appServiceName: 'api-ensaludoptima'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAndPush
  displayName: Build Docker image and push image to ACR
  jobs:
  - job: BuildAndPusth
    displayName: Build Docker image and push image to ACR
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push image to ACR
      inputs:
        command: buildAndPush
        repository: $(imageName)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        arguments: '--build-arg PROJECT_PATH=$(PROJECT_PATH) --build-arg SERVER_PORT=$(SERVER_PORT) --build-arg CLIENT_ADDRESS=$(CLIENT_ADDRESS) --build-arg CLIENT_PORT=$(CLIENT_PORT) --build-arg JWT_EXPIRES_IN=$(JWT_EXPIRES_IN) --build-arg JWT_COOKIE_EXPIRES_IN=$(JWT_COOKIE_EXPIRES_IN) --build-arg RESET_PASS_COOKIE_EXPIRES_IN=$(RESET_PASS_COOKIE_EXPIRES_IN) --build-arg AZURE_KEY_VAULT_URI=$(AZURE_KEY_VAULT_URI) --build-arg AZURE_TENANT_ID=$(AZURE_TENANT_ID) --build-arg AZURE_CLIENT_ID=$(AZURE_CLIENT_ID) --build-arg AZURE_CLIENT_SECRET=$(AZURE_CLIENT_SECRET) --build-arg EMAIL_HOST=$(EMAIL_HOST) --build-arg EMAIL_PORT=$(EMAIL_PORT) --build-arg MAILTRAP_EMAIL_HOST=$(MAILTRAP_EMAIL_HOST) --build-arg MAILTRAP_EMAIL_PORT=$(MAILTRAP_EMAIL_PORT)'
          
- stage: Deploy
  displayName: Deploy image from ACR to Azure Web App
  jobs:
  - job: Deploy
    displayName: Deploy image from ACR to Azure Web App
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureWebAppContainer@1
      displayName: Deploy image to Azure Web App
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appServiceName)
        imageName: $(containerRegistry)/$(imageName):$(tag)
